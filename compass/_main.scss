@import "variables";
@import "responsive-mixins";

@function em( $value, $baseSize: 16) {
  @return ($value/$baseSize)+em;
}

.clearfix:after {
  content: ".";
  display: block;
  visibility: hidden;
  height: 0;
  clear: both;
  overflow: hidden;
}

body {
  font: 100% 'Lato', sans-serif;
  font-style: italic;
  @include transition(background-color $animation-time ease-out);
  height: 100vh;
  &.final {
	main {
	  opacity: 0;
	}
  }
}

a {
  text-decoration: none;
}

p {
  margin: 0;
}

* {
  box-sizing: border-box;
}

header {
  position: fixed;
  z-index: 3;
  width: 100%;
  padding: 20px;
  .logo {
	display: block;
	background: url(../images/logo.svg) no-repeat center center;
	background-size: 100% auto;
	width: 130px;
	height: 130px;
  }
  .social {
	position: absolute;
	right: 40px;
	top: 30px;
  }
}

.social {
  a {
	&.sharing-facebook {
	  background: $blue;
	  border-color: $blue;
	  color: white;
	  &:hover {
		background: white;
		color: $blue;
	  }
	}

	&.sharing-twitter {
	  background: $red;
	  border-color: $red;
	  color: white;
	  &:hover {
		background: white;
		color: $red;
	  }
	}
	display: block;
	width: 30px;
	height: 30px;
	border:3px solid;
	border-radius: 30px;
	float: left;
	margin-left: 20px;
	svg {
	  fill: currentColor;
	  g {
		fill: currentColor;
	  }
	}

  }
}

nav {

  position: absolute;
  width: 20px;
  right: 30px;
  z-index: 2;
  top: 0;
  height: 100vh;
  display: flex;
  align-items: center;
  @include transform(translate3d(50px, 0, 0));
  @include transition(transform $animation-time ease-out);

  ul, li {
	list-style-type: none;
	margin: 0;
	padding: 0;
	width: 100%;
  }

  li {
	position: relative;
	font-size: em(9);
	margin: 3px 0;
	-webkit-border-radius: 18px;
	-moz-border-radius: 18px;
	border-radius: 18px;
	width: 18px;
	height: 18px;
	line-height: 18px;
	background-color: $blue;
	color: white;
	text-align: center;
	&.selected {
	  background-color: $red;
	}
  }
}

.wrap {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  overflow: hidden;
  z-index: 1;
}

main {
  @include transition(transform $animation-time 0.2s ease-in-out, opacity $animation-time 0.2s ease-in-out);

  section {
	height: 100vh;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	position: relative;
	text-align: center;

	.number {
	  position: relative;
	  height: 80px;
	  margin: 0 0 80px;

	  > span {
		display: block;
		width: 80px;
		height: 80px;
		border-radius: 80px;
		line-height: 80px;
		background: white;
		color: $red;
		font-size: em(40);
		font-weight: 700;
		z-index: 2;
	  }

	  svg {
		width: 180px;
		position: absolute;
		left: 50%;
		top: 50%;
		z-index: -1;
		-webkit-animation: rotating 10s linear infinite;
		-moz-animation: rotating 10s linear infinite;
		-ms-animation: rotating 10s linear infinite;
		-o-animation: rotating 10s linear infinite;
		animation: rotating 10s linear infinite;
		-webkit-transform-origin: left top;
		-moz-transform-origin: left top;
		-ms-transform-origin: left top;
		-o-transform-origin: left top;
		transform-origin: left top;
	  }
	}

	.question {
	  padding: 0;
	  width: 80%;
	  font-size: em(32);
	  font-weight: 700;
	  color: $blue;
	  margin-bottom: 8vh;
	  em {
		font-weight: 400;
	  }
	}

	.answers {
	  width: 80%;
	  padding: 0;
	  font-size: em(16);
	  ol {
		list-style-type: none;
		padding: 0;
		margin: 0;
		display: flex;
		justify-content: center;

		li {
		  margin: 0 5vw;
		  input[type="radio"]:checked + label {
			background: white;
			&.yes {
			  color: $blue;
			}
			&.no {
			  color: $red;
			}
		  }

		  label {
			$buttonWidth: 50px;
			$buttonBorder: 3px;
			display: block;
			padding: 0;
			width: $buttonWidth;
			height: $buttonWidth;
			border-radius: $buttonWidth;
			line-height: $buttonWidth - ($buttonBorder * 2) - 1;
			border: $buttonBorder solid;
			color: white;
			text-transform: lowercase;
			font-style: italic;
			text-indent: -2px;

			&.yes {
			  border-color: $blue;
			  background: $blue;
			  &:hover {
				color: $blue;
				background: white;
			  }
			}

			&.no {
			  border-color: $red;
			  background: $red;
			  &:hover {
				color: $red;
				background: white;
			  }
			}
		  }

		}
	  }
	}

	.entrance {
	  width: 80%;
	  max-width: 740px;
	  font-style: italic;
	  h1 {
		margin: 0 0 5px;
		font-weight: 400;
		font-size: em(50);
		line-height: 1.2;
		color: $red;

		&:first-child {
		  margin-bottom: 25px;
		}
	  }

	  p {
		font-size: em(24);
		font-weight: $font-weight-reg;
		line-height: 1.7;
		margin:0 0 em(50, 24);
		color: $blue;
	  }
	}

	.entrance-button, .next-button {
	  margin-top: 5vh;
	  width: 100%;
	  text-align: center;
	}
  }
}

.custom-radio {
  position: relative;

  input[type="radio"] {
	position: absolute;
	z-index: -1;
	opacity: 0;
  }

  label {
	cursor: pointer;
	display: block;
  }

}

button {
  position: relative;
  &:hover {
	&:after {
	  display: block;
	}
  }
  &:after {
	display: none;
	position: absolute;
	left: 50%;
	top: 50%;
	@include transform(translate(-50%,-50%) scale(0.6));
	z-index: -1;
	width: 300px;
	height: 300px;
	background: url(../images/dircab-button.gif);
	content:".";
	font-size:0;
  }
  $baseButtonFontSize: 20;
  font-size: em($baseButtonFontSize);
  background: $red;
  width: 90px;
  height: 90px;
  border-radius: 90px;
  color: white;
  font-style: italic;
  border: none;
  line-height: 1.1;
  &:focus {
	outline: 0;
  }
}

.button-reset {
  display: none
}

.final {
  .final-container {
	&.winner {
	  @include transform(translate3d(0, 0vh, 0));
	}
  }
}

.final-container {
  position: relative;
  z-index: 2;
  max-width: 900px;
  width: 100%;
  display: none;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  margin: 0 auto;
  height: 100vh;
  padding: 0 20px;
  @include transition(transform $animation-time 0.5s ease-out);
  @include transform(translate3d(0, 100vh, 0));

  h2 {
	width: 100%;
	margin: 0;
	margin-bottom: 100px;
	font-size: em(16);
	position: relative;
	white-space: nowrap;
	span {
	  position: relative;
	  z-index: 1;
	  background: #fff;
	  display: block;
	  font-size: em(40);
	  line-height: 1;
	  color: $red;
	  font-weight: 400;
	}

	&:before {
	  content: ".";
	  display: block;
	  width: 200px;
	  height: 200px;
	  position: absolute;
	  left: 50%;
	  top: 50%;
	  transform: translate3d(-50%,-50%,0);
	  background: url(../images/question.svg);
	  z-index: -2;
	  font-size: 0;
	  -webkit-animation: rotating 10s linear infinite;
	  -moz-animation: rotating 10s linear infinite;
	  -ms-animation: rotating 10s linear infinite;
	  -o-animation: rotating 10s linear infinite;
	  animation: rotating 10s linear infinite;
	  -webkit-transform-origin: left top;
	  -moz-transform-origin: left top;
	  -ms-transform-origin: left top;
	  -o-transform-origin: left top;
	  transform-origin: left top;
	}

	&:after {
	  content: ".";
	  position: absolute;
	  width: 100px;
	  height: 100px;
	  border-radius: 100px;
	  background: white;
	  left: 50%;
	  top: 50%;
	  transform: translate3d(-50%,-50%,0);
	  display: block;
	  font-size: 0;
	  z-index: -1;
	}
  }

  .content {
	display: flex;
	align-items: center;
	position: relative;
	font-size: em(16);
	color: $blue;
  }

  .image, .description {
	width: 50%;
  }

  .description {
	padding-left: 20px;
	font-weight: 700;
	font-size: em(20);
	line-height: 1.3;
  }

  .social {
	margin-top: 20px;
  }

  .image {
	text-align: right;
	padding-right: 20px;

	img {
	  max-width: 100%;
	  max-height: 270px;
	}
  }
}

@media all and (max-width: 764px) {
  body {
	header {
	  background: rgba(255, 255, 255, 0.8);
	}
  }

  header {
	.logo {
	  width: 40px;
	  height: 40px;
	}
  }

  .final-container {
	h2 {
	  @include transform(scale(0.7));
	  margin-bottom: 70px;
	  span {
		font-size: em(40*0.9);
	  }
	}

	.content {
	  flex-direction: column;
	  .image, .description {
		width: 80%;
		text-align: center;
	  }
	  .description {
		padding-top: 10px;
		padding-left: 0;
	  }
	  .image {
		padding-bottom: 10px;
		padding-right: 0;
		text-align: center;
	  }
	}
  }

  main {
	section {
	  .question {
		padding-right: 20px;
	  }
	  .entrance {
		h1 {
		  font-size: em(40);
		  line-height: 1.2;
		  color: $red;
		}

		p {
		  font-size: em(20);
		}
	  }
	}
  }

}

@media all and (max-width: 580px) {

  nav {
	right: 10px;
	ul {
	  li {
		&:before {
		  display: none;
		  width: 13px;
		  height: 13px;
		}
	  }
	}
  }

  main {
	form {
	  section {
		justify-content: start;
		padding-top: 90px;
	  }
	}
	section {
	  .question {
		font-size: em(20);
		line-height: 1.2;
	  }

	  .number {
		margin-bottom: 40px;
		@include transform(scale(0.7, 0.7));
	  }

	  .answers {
		padding-right: 20px;
		font-size: em(14);
	  }

	  .entrance {
		h1 {
		  font-size: em(30);
		}
		p {
		  font-size: em(16);
		}
	  }
	}
  }
}

@media all and (max-width: 480px) {

  header {
	.logo {
	  width: 25px;
	  height: 25px;
	}

	.social {
	  top: 20px;
	}
  }

  .final-container {
	padding: 0;
	overflow: hidden;

	h2 {
	  span {
		font-size: em(30);
	  }
	}

	.image {
	  img {
		max-height: 200px;
	  }
	}
	.description {
	  font-size:em(16);
	}
  }

  main {
	section {
	  padding-top: 35px;

	  .question {
		font-size: em(16);
		line-height: 1.2;
	  }

	  .entrance {
		h1 {
		  font-size: em(24);
		}
	  }
	}

	> section {
	  padding-top: 0px;
	}
  }
}

@-webkit-keyframes rotating /* Safari and Chrome */
{
  from {
	-webkit-transform: rotate(0deg) translate3d(-50%, -50%, 0);
	-o-transform: rotate(0deg) translate3d(-50%, -50%, 0);
	transform: rotate(0deg) translate3d(-50%, -50%, 0);
  }
  to {
	-webkit-transform: rotate(360deg) translate3d(-50%, -50%, 0);
	-o-transform: rotate(360deg) translate3d(-50%, -50%, 0);
	transform: rotate(360deg) translate3d(-50%, -50%, 0);
  }
}

@keyframes rotating {
  from {
	-ms-transform: rotate(0deg) translate3d(-50%, -50%, 0);
	-moz-transform: rotate(0deg) translate3d(-50%, -50%, 0);
	-webkit-transform: rotate(0deg) translate3d(-50%, -50%, 0);
	-o-transform: rotate(0deg) translate3d(-50%, -50%, 0);
	transform: rotate(0deg) translate3d(-50%, -50%, 0);
  }
  to {
	-ms-transform: rotate(360deg) translate3d(-50%, -50%, 0);
	-moz-transform: rotate(360deg) translate3d(-50%, -50%, 0);
	-webkit-transform: rotate(360deg) translate3d(-50%, -50%, 0);
	-o-transform: rotate(360deg) translate3d(-50%, -50%, 0);
	transform: rotate(360deg) translate3d(-50%, -50%, 0);
  }
}